{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["__webpack_exports__","_ref","data","colorBadge","drupal","tripal","documentation","chado","databases","bioinformatics","web-dev","travis-ci","d3","mysql","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","style","maxWidth","src","alt","allMarkdownRemark","edges","map","_ref2","node","margin","width","key","id","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","fields","slug","className","css","_templateObject","class","frontmatter","title","_templateObject2","marginLeft","date","tags","name","index","color","marginRight","excerpt","query"],"mappings":"+dAOcA,EAAA,iBAAAC,GAAY,IAAVC,EAAUD,EAAVC,KAERC,EAAa,CACjBC,OAAU,UACVC,OAAU,UACVC,cAAiB,SACjBC,MAAS,OACTC,UAAa,UACbC,eAAkB,QAClBC,UAAW,UACXC,YAAa,OACbC,GAAM,UACNC,MAAS,QAGX,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACNH,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACMJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,MAAO,CAACC,SAAU,MACtBN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUG,IAAI,uBAAuBC,IAAI,wBACvCR,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACSJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,6FACrBJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,8BAAgCJ,EAAAC,EAAAC,cAAA,mBAAhC,wCAKIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAEIhB,EAAKqB,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAF,OAAab,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,MAAO,CACvDS,OAAQ,OACRC,MAAO,SACNC,IAAKH,EAAKI,IACbjB,EAAAC,EAAAC,cAACgB,EAAA,KAAD,CAAMC,GAAIN,EAAKO,OAAOC,KAAMC,UAAWC,YAAFC,MAInCxB,EAAAC,EAAAC,cAAA,OAAKuB,MAAM,eACRZ,EAAKa,YAAYC,OAEpB3B,EAAAC,EAAAC,cAAA,QAAMoB,UAAWC,YAAFK,KAENvB,MAAO,CACZwB,WAAY,SAEd7B,EAAAC,EAAAC,cAAA,WACGW,EAAKa,YAAYI,KAEhBjB,EAAKa,YAAYK,KACblB,EAAKa,YAAYK,KAAKpB,IAAI,SAASqB,EAAMC,GAEzC,IAAIC,EAAQ7C,EAAW2C,GACnB3C,EAAW2C,GACX,YAEJ,OAAOhC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,MAAO,CACjBwB,WAAY,MACZM,YAAa,OACZD,MAAOA,GAAQF,KAEpB,KAIVhC,EAAAC,EAAAC,cAAA,OAAKuB,MAAM,YAAYpB,MAAO,CAACwB,WAAY,SAC3C7B,EAAAC,EAAAC,cAAA,SAAIW,EAAKuB,mBAWd,IAAMC,EAAK","file":"component---src-pages-index-js-4281e8817934748b61f1.js","sourcesContent":["import React from \"react\"\nimport {css} from \"react-emotion\"\nimport {Link, graphql} from \"gatsby\"\n//import { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport {Badge, Col, Row, Card, CardImg, CardTitle, CardBody, CardSubtitle, CardText} from \"reactstrap\";\n\nexport default({data}) => {\n\n  const colorBadge = {\n    'drupal': \"primary\",\n    'tripal': \"success\",\n    'documentation': \"danger\",\n    'chado': 'info',\n    'databases': 'primary',\n    'bioinformatics': 'light',\n    'web-dev': 'warning',\n    'travis-ci': 'dark',\n    'd3': 'success',\n    'mysql': \"info\"\n  }\n\n  return (<Layout>\n    <div>\n<Row>\n      <Col>\n        <Card style={{maxWidth: 250}}>\n          <CardImg  src=\"/img/condon_face.jpg\" alt=\"Bradford Condon PhD\" />\n            <CardBody>\n                     <CardText>Hello!  I am a full stack web/mobile developer, data scientist, and bionformatician.</CardText>\n<CardText>If you're looking for <b>Tripal</b> help, you're in the right place.</CardText>\n                 </CardBody>\n          </Card>\n      </Col>\n\n    <Col>\n      {\n        data.allMarkdownRemark.edges.map(({node}) => (<Card style={{\n            margin: '10px',\n            width: '60rem'\n          }} key={node.id}>\n          <Link to={node.fields.slug} className={css `\n                text-decoration: none;\n                color: inherit;\n              `}>\n            <div class=\"card-header\">\n              {node.frontmatter.title}\n            </div>\n            <span className={css `\n                    color: #bbb;\n                  `} style={{\n                marginLeft: '10px'\n              }}>\n              <div>\n                {node.frontmatter.date}\n                {\n                  node.frontmatter.tags\n                    ? node.frontmatter.tags.map(function(name, index) {\n\n                      let color = colorBadge[name]\n                        ? colorBadge[name]\n                        : \"secondary\"\n\n                      return <Badge style={{\n                          marginLeft: '5px',\n                          marginRight: '5px'\n                        }} color={color}>{name}</Badge>;\n                    })\n                    : ''\n                }\n              </div>\n            </span>\n            <div class=\"card-text\" style={{marginLeft: '10px'}}>\n            <p>{node.excerpt}</p>\n            </div>\n          </Link>\n        </Card>))\n      }\n    </Col>\n    </Row>\n    </div>\n  </Layout>)\n}\n\nexport const query = graphql `\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}