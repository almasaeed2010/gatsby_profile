{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["__webpack_exports__","_ref","data","colorBadge","drupal","tripal","documentation","chado","databases","bioinformatics","web-dev","travis-ci","d3","mysql","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","allMarkdownRemark","totalCount","edges","map","_ref2","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","fields","slug","className","css","_templateObject","frontmatter","title","_templateObject2","date","excerpt","tags","name","index","color","reactstrap__WEBPACK_IMPORTED_MODULE_6__","style","marginLeft","marginRight","query"],"mappings":"+dASeA,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAEVC,EAAa,CACjBC,OAAU,UACVC,OAAU,UACVC,cAAiB,SACjBC,MAAU,OACVC,UAAa,UACbC,eAAkB,QAClBC,UAAW,UACXC,YAAa,OACbC,GAAO,UACPC,MAAS,QAGX,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKd,EAAKgB,kBAAkBC,WAA5B,UACCjB,EAAKgB,kBAAkBE,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChCT,EAAAC,EAAAC,cAAA,OAAKQ,IAAKD,EAAKE,IACbX,EAAAC,EAAAC,cAACU,EAAA,KAAD,CACEC,GAAIJ,EAAKK,OAAOC,KAChBC,UAAWC,YAAFC,MAOTlB,EAAAC,EAAAC,cAAA,UAEGO,EAAKU,YAAYC,MAAO,IACzBpB,EAAAC,EAAAC,cAAA,QACEc,UAAWC,YAAFI,MADX,KAKKZ,EAAKU,YAAYG,OAGxBtB,EAAAC,EAAAC,cAAA,SAAIO,EAAKc,UAGTd,EAAKU,YAAYK,KACff,EAAKU,YAAYK,KAAKjB,IAAI,SAASkB,EAAMC,GAEvC,IAAIC,EAAQtC,EAAWoC,GAAQpC,EAAWoC,GAAQ,YAEhD,OAAOzB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACLC,MAAO,CACJC,WAAY,MACZC,YAAa,OAEfJ,MAAOA,GAAQF,KACf,SAQhB,IAAMO,EAAK","file":"component---src-pages-index-js-9c21fdc8a96b58a66a0d.js","sourcesContent":["import React from \"react\"\nimport { css } from \"react-emotion\"\nimport { Link, graphql } from \"gatsby\"\n//import { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport {\n  Badge,\n} from \"reactstrap\";\n\nexport default ({ data }) => {\n\n  const colorBadge = {\n    'drupal': \"primary\",\n    'tripal': \"success\",\n    'documentation': \"danger\",\n    'chado' : 'info',\n    'databases': 'primary',\n    'bioinformatics': 'light',\n    'web-dev': 'warning',\n    'travis-ci': 'dark',\n    'd3' : 'success',\n    'mysql': \"info\"\n  }\n\n  return (\n    <Layout>\n      <div>\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link\n              to={node.fields.slug}\n              className={css`\n                text-decoration: none;\n                color: inherit;\n              `\n}\n            >\n\n              <h3\n              >\n                {node.frontmatter.title}{\" \"}\n                <span\n                  className={css`\n                    color: #bbb;\n                  `}\n                >\n                  â€” {node.frontmatter.date}\n                </span>\n              </h3>\n              <p>{node.excerpt}</p>\n            </Link>\n            {\n              node.frontmatter.tags ?\n                node.frontmatter.tags.map(function(name, index){\n\n                  let color = colorBadge[name] ? colorBadge[name] : \"secondary\"\n\n                    return <Badge\n                      style={{\n                         marginLeft: '5px',\n                         marginRight: '5px',\n                       }}\n                       color={color}>{name}</Badge>;\n                  }) : ''}\n          </div>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}